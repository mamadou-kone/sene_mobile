import 'dart:io';
import 'package:flutter/foundation.dart';
import '../models/projet.dart';
import '../services/auth_controleur.dart';
import '../services/projet_service.dart';

class ProjetController with ChangeNotifier {
  final ProjetService projetService;
  List<Projet> projets = [];
  List<Projet> myProjets = [];

  ProjetController(this.projetService);

  Future<void> loadProjets() async {
    try {
      projets = await projetService.fetchProjets();
      filterMyProjets(); // Filtrer les projets de l'utilisateur connecté après le chargement
      notifyListeners(); // Notifie les écouteurs de changement
    } catch (e) {
      print('Erreur lors du chargement des projets: $e');
    }
  }

  void filterMyProjets() {
    myProjets = projets.where((projet) {
      return projet.agriculteur['id'] ==
          AuthController.instance.userId; // Vérifiez l'ID ici
    }).toList();
    notifyListeners(); // Notifie les écouteurs de changement
  }

  List<Projet> getProjets() {
    return myProjets.isNotEmpty
        ? myProjets
        : projets; // Renvoie les projets de l'utilisateur connecté ou tous les projets
  }

  Future<void> addProjet(
      String titre, String description, double montantNecessaire,
      {File? image}) async {
    if (AuthController.instance.userId == null) {
      throw Exception('ID de l\'agriculteur est requis');
    }

    Projet projet = Projet(
      titre: titre,
      description: description,
      montantNecessaire: montantNecessaire,
      statut: true,
      agriculteur: {
        'id': AuthController.instance.userId
      }, // Utilisation de l'ID de l'agriculteur connecté
    );

    try {
      await projetService.create('projet', projet.toJson(), image: image);
      await loadProjets(); // Recharge la liste des projets après l'ajout
    } catch (e) {
      print('Erreur lors de l\'ajout du projet: $e');
    }
  }
}
